generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model OrganizationTypes {
  type         String          @id
  updatedAt    DateTime        @updatedAt @map("updated_at") @db.DateTime(0)
  createdAt    DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  organization Organizations[]

  @@map("organization_types")
}

model Organizations {
  id                              String             @id @default(uuid())
  name                            String             @unique
  description                     String?
  organizationType                String             @map("organization_type")
  isVendor                        Boolean            @default(false) @map("is_vendor")
  isDelinquent                    Boolean            @default(false) @map("is_delinquent")
  city                            String
  country                         String?
  street1                         String
  street2                         String?
  phoneNumber                     String?            @map("phone_number")
  postalCode                      String             @map("postal_code")
  stateOrRegion                   String?            @map("state_or_region")
  updatedAt                       DateTime           @updatedAt @map("updated_at") @db.DateTime(0)
  createdAt                       DateTime           @default(now()) @map("created_at") @db.DateTime(0)
  isActiveContractor              Int?               @map("is_active_contractor") @db.TinyInt
  isActiveWorkResource            Int?               @map("is_active_work_resource") @db.TinyInt
  revenueShare                    Int?               @map("revenue_share") @db.TinyInt
  revisionRevenueShare            Int?               @map("revision_revenue_share") @db.TinyInt
  invoiceRecipient                String?            @map("invoice_recipient") @db.VarChar(255)
  invoiceRecipientEmail           String?            @map("invoice_recipient_email") @db.VarChar(255)
  projectPropertyTypeDefaultValue String?            @map("project_property_type_default_value") @db.VarChar(255)
  mountingTypeDefaultValue        String?            @map("mounting_type_default_value") @db.VarChar(255)
  addressCoordinates              String             @map("address_coordinates") @db.VarChar(255)
  fullAddress                     String             @map("full_address") @db.VarChar(255)
  isSpecialRevisionPricing        Boolean            @map("is_special_revision_pricing")
  numberOfFreeRevisionCount       Int?               @map("number_of_free_revision_count") @db.UnsignedTinyInt
  invitationEmailEntity           InvitationEmails[]
  organizationTypeEntity          OrganizationTypes  @relation(fields: [organizationType], references: [type])
  users                           Users[]
  projects                        OrderedProjects[]
  invoices                        Invoices[]
  vendorInvoices                  VendorInvoices[]
  assignedTasks                   AssignedTasks[]
  clientNotes                     ClientNotes?

  @@index([organizationType], map: "organizations_organization_type_fkey")
  @@map("organizations")
}

model Roles {
  role                  String             @id
  updatedAt             DateTime           @updatedAt @map("updated_at") @db.DateTime(0)
  createdAt             DateTime           @default(now()) @map("created_at") @db.DateTime(0)
  invitationEmailEntity InvitationEmails[]
  userRole              UserRole[]

  @@map("roles")
}

model InvitationEmails {
  id                 Int           @id @default(autoincrement())
  email              String
  role               String
  organizationId     String        @map("organization_id")
  updated_at         DateTime      @db.DateTime(0)
  created_at         DateTime      @default(now()) @db.DateTime(0)
  organizationEntity Organizations @relation(fields: [organizationId], references: [id])
  rolesEntity        Roles         @relation(fields: [role], references: [role])

  @@map("invitation_emails")
}

model UserRole {
  roleName  String   @map("role_name")
  userId    String   @unique(map: "user_id") @map("user_id")
  updatedAt DateTime @updatedAt @map("updated_at") @db.DateTime(0)
  createdAt DateTime @default(now()) @map("created_at") @db.DateTime(0)
  role      Roles    @relation(fields: [roleName], references: [role])
  user      Users    @relation(fields: [userId], references: [id])

  @@id([userId, roleName])
  @@index([roleName], map: "user_role_role_fkey")
  @@map("user_role")
}

model Users {
  id                         String               @id @default(uuid())
  dateOfJoining              DateTime?            @map("date_of_joining") @db.DateTime(0)
  type                       String               @db.VarChar(255)
  deliverables_emails        String?              @db.Text
  email                      String               @unique
  firstName                  String               @map("first_name")
  lastName                   String               @map("last_name")
  full_name                  String               @db.VarChar(255)
  status                     String               @default("sign up not completed") @db.VarChar(255)
  organizationId             String               @map("organization_id")
  updatedAt                  DateTime             @updatedAt @map("updated_at") @db.DateTime(0)
  createdAt                  DateTime             @default(now()) @map("created_at") @db.DateTime(0)
  isHandRaisedForTask        Boolean              @map("is_hand_raised_for_task")
  address                    String?              @db.Text
  phoneNumber                String?              @map("phone_number") @db.VarChar(20)
  isActiveWorkResource       Boolean?             @map("is_active_work_resource")
  isCurrentUser              Boolean?             @map("is_current_user")
  isInactiveOrganizationUser Boolean?             @map("is_inactive_organization_user")
  revenueShare               Boolean?             @map("revenue_share")
  revisionRevenueShare       Boolean?             @map("revision_revenue_share")
  updatedBy                  String               @map("updated_by") @db.VarChar(255)
  isVendor                   Boolean              @default(false) @map("is_vendor")
  passwordEntity             Passwords?
  userRole                   UserRole?
  userPosition               UserPosition?
  organization               Organizations        @relation(fields: [organizationId], references: [id])
  assignedTasks              AssignedTasks[]
  availableTasks             UserAvailableTasks[]
  licenses                   UserLicense[]
  ptos                       Ptos[]
  ptoDetails                 PtoDetails[]
  informationHistories       InformationHistories[]
  client_note_snapshot       ClientNoteSnapshots[]

  @@index([organizationId], map: "users_organization_id_fkey")
  @@map("users")
}

model Passwords {
  userId    String   @unique @map("user_id")
  password  String
  updatedAt DateTime @updatedAt @map("updated_at") @db.DateTime(0)
  createdAt DateTime @default(now()) @map("created_at") @db.DateTime(0)
  user      Users    @relation(fields: [userId], references: [id])

  @@map("passwords")
}

model Positions {
  id                    String         @id @default(uuid())
  name                  String
  description           String?
  updatedAt             DateTime       @updatedAt @map("updated_at") @db.DateTime(0)
  createdAt             DateTime       @default(now()) @map("created_at") @db.DateTime(0)
  maxAssignedTasksLimit Int?           @map("max_assigned_tasks_limit") @db.UnsignedTinyInt
  license_type          String?        @db.VarChar(255)
  UserPosition          UserPosition[]

  @@map("positions")
}

model Service {
  id                                       String                           @id @default(uuid()) @db.VarChar(255)
  name                                     String                           @unique(map: "name") @db.VarChar(255)
  billingCode                              String                           @unique(map: "billing_code") @map("billing_code") @db.VarChar(255)
  basePrice                                Decimal?                         @map("base_price") @db.Decimal(13, 4)
  gmPrice                                  Decimal?                         @map("gm_price") @db.Decimal(13, 4)
  revisionPrice                            Decimal?                         @map("revision_price") @db.Decimal(13, 4)
  revisionGmPrice                          Decimal?                         @map("revision_gm_price") @db.Decimal(13, 4)
  fixedPrice                               Decimal?                         @map("fixed_price") @db.Decimal(13, 4)
  commercialRevisionCostPerUnit            Decimal?                         @map("commercial_revision_cost_per_unit") @db.Decimal(13, 4)
  commercialRevisionMinutesPerUnit         Int?                             @default(1) @map("commercial_revision_minutes_per_unit") @db.UnsignedInt
  commercialNewEstimatedTaskDuration       Decimal?                         @map("commercial_new_estimated_task_duration") @db.Decimal(2, 1)
  commercialRevisionEstimatedTaskDuration  Decimal?                         @map("commercial_revision_estimated_task_duration") @db.Decimal(2, 1)
  residentialNewEstimatedTaskDuration      Decimal?                         @map("residential_new_estimated_task_duration") @db.Decimal(2, 1)
  residentialRevisionEstimatedTaskDuration Decimal?                         @map("residential_revision_estimated_task_duration") @db.Decimal(2, 1)
  orderedServices                          OrderedServices[]
  tasks                                    Tasks[]
  commercialStandardPricingTiers           CommercialStandardPricingTiers[]

  @@map("service")
}

model OrderedServices {
  id                       String          @id @default(uuid()) @db.VarChar(255)
  organizationId           String          @map("organization_id") @db.VarChar(255)
  organizationName         String          @map("organization_name") @db.VarChar(255)
  is_expedited             Boolean         @default(false)
  serviceId                String          @map("service_id") @db.VarChar(255)
  jobId                    String          @map("job_id") @db.VarChar(255)
  serviceName              String          @map("service_name") @db.VarChar(255)
  price                    Decimal?        @db.Decimal(13, 4)
  priceOverride            Decimal?        @map("price_override") @db.Decimal(13, 4)
  status                   String?         @db.VarChar(255)
  doneAt                   DateTime?       @map("done_at") @db.DateTime(0)
  orderedAt                DateTime        @default(now()) @map("ordered_at") @db.DateTime(0)
  description              String?         @db.Text
  sizeForRevision          String?         @map("size_for_revision") @db.VarChar(255)
  projectId                String          @map("project_id") @db.VarChar(255)
  isRevision               Boolean         @default(false) @map("is_revision")
  isManualPrice            Boolean         @map("is_manual_price")
  projectPropertyType      String          @map("project_property_type") @db.VarChar(255)
  mountingType             String          @map("mounting_type") @db.VarChar(255)
  projectNumber            String?         @map("project_number") @db.VarChar(255)
  projectPropertyOwnerName String?         @map("project_property_owner_name") @db.VarChar(255)
  jobName                  String          @map("job_name") @db.VarChar(255)
  job                      OrderedJobs     @relation(fields: [jobId], references: [id])
  service                  Service         @relation(fields: [serviceId], references: [id])
  assignedTasks            AssignedTasks[]

  @@map("ordered_services")
}

model States {
  stateName     String   @map("state_name")
  abbreviation  String   @map("abbreviation")
  geoId         String   @map("geo_id") @db.VarChar(20)
  stateCode     String?  @map("state_code") @db.VarChar(20)
  ansiCode      String?  @map("ansi_code") @db.VarChar(20)
  stateLongName String?  @map("state_long_name")
  lsadCode      String?  @map("lsad_code") @db.VarChar(20)
  funcStat      String?  @map("func_stat") @db.VarChar(20)
  updatedAt     DateTime @updatedAt @map("updated_at") @db.DateTime(0)
  createdAt     DateTime @default(now()) @map("created_at") @db.DateTime(0)

  @@id([stateName, abbreviation])
  @@map("states")
}

model UserPosition {
  userId       String    @unique(map: "user_id") @map("user_id")
  userName     String    @map("user_name") @db.VarChar(255)
  positionId   String    @map("position_id")
  positionName String    @map("position_name") @db.VarChar(255)
  updatedAt    DateTime  @updatedAt @map("updated_at") @db.DateTime(0)
  createdAt    DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  user_email   String    @db.VarChar(255)
  position     Positions @relation(fields: [positionId], references: [id])
  user         Users     @relation(fields: [userId], references: [id])

  @@id([userId, positionId])
  @@index([positionId], map: "user_position_position_id_fkey")
  @@map("user_position")
}

model CountySubdivisions {
  geoId      String   @id @map("geo_id") @db.VarChar(20)
  stateCode  String?  @map("state_code") @db.VarChar(20)
  stateName  String?  @map("state_name") @db.VarChar(200)
  countyCode String?  @map("county_code") @db.VarChar(20)
  name       String?  @map("name") @db.VarChar(200)
  ansiCode   String?  @map("ansi_code") @db.VarChar(20)
  lsadCode   String?  @map("lsad_code") @db.VarChar(20)
  funcStat   String?  @map("func_stat") @db.VarChar(20)
  longName   String?  @map("long_name") @db.VarChar(200)
  updatedAt  DateTime @updatedAt @map("updated_at") @db.DateTime(0)
  createdAt  DateTime @default(now()) @map("created_at") @db.DateTime(0)

  @@map("county_subdivisions")
}

model Counties {
  geoId          String   @id @map("geo_id") @db.VarChar(20)
  stateCode      String?  @map("state_code") @db.VarChar(20)
  stateName      String?  @map("state_name") @db.VarChar(100)
  countyCode     String?  @map("county_code") @db.VarChar(20)
  ansiCode       String?  @map("ansi_code") @db.VarChar(20)
  countyName     String?  @map("county_name") @db.VarChar(100)
  countyLongName String?  @map("county_long_name") @db.VarChar(100)
  lsadCode       String?  @map("lsad_code") @db.VarChar(20)
  funcStat       String?  @map("func_stat") @db.VarChar(20)
  updatedAt      DateTime @updatedAt @map("updated_at") @db.DateTime(0)
  createdAt      DateTime @default(now()) @map("created_at") @db.DateTime(0)

  @@map("counties")
}

model Places {
  geoId         String   @id @map("geo_id") @db.VarChar(20)
  stateCode     String?  @map("state_code") @db.VarChar(20)
  stateName     String?  @map("state_name") @db.VarChar(100)
  placeC        String?  @map("place_c") @db.VarChar(20)
  ansiCode      String?  @map("ansi_code") @db.VarChar(20)
  placeFips     String?  @map("place_fips") @db.VarChar(20)
  placeName     String?  @map("place_name") @db.VarChar(100)
  placeType     String?  @map("place_type") @db.VarChar(20)
  lsadCode      String?  @map("lsad_code") @db.VarChar(20)
  counties      String?  @map("counties") @db.VarChar(100)
  funcStat      String?  @map("func_stat") @db.VarChar(20)
  placeLongName String?  @map("place_long_name") @db.VarChar(200)
  updatedAt     DateTime @updatedAt @map("updated_at") @db.DateTime(0)
  createdAt     DateTime @default(now()) @map("created_at") @db.DateTime(0)

  @@map("places")
}

model AHJNotes {
  geoId                         String   @id @map("geo_id") @db.VarChar(20)
  createdAt                     DateTime @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt                     DateTime @default(now()) @updatedAt @map("updated_at") @db.DateTime(0)
  type                          String?  @db.VarChar(20)
  geoIdState                    String   @map("geo_id_state") @db.VarChar(20)
  geoIdCounty                   String?  @map("geo_id_county") @db.VarChar(20)
  geoIdCountySubdivision        String?  @map("geo_id_county_subdivision") @db.VarChar(20)
  geoIdPlace                    String?  @map("geo_id_place") @db.VarChar(20)
  name                          String   @map("name") @db.VarChar(300)
  fullAhjName                   String   @map("full_ahj_name") @db.VarChar(300)
  queryState                    String?  @map("query_state") @db.VarChar(20)
  queryCounty                   String?  @map("query_county") @db.VarChar(200)
  website                       String?  @map("website") @db.VarChar(242)
  specificFormRequired          String?  @map("specific_form_required") @db.VarChar(200)
  buildingCodes                 String?  @map("building_codes") @db.Text
  generalNotes                  String?  @map("general_notes") @db.Text
  pvMeterRequired               String?  @map("pv_meter_required") @db.VarChar(200)
  acDisconnectRequired          String?  @map("ac_disconnect_required") @db.VarChar(200)
  centerFed120Percent           String?  @map("center_fed_120_percent") @db.VarChar(200)
  deratedAmpacity               String?  @map("derated_ampacity") @db.VarChar(200)
  fireSetBack                   String?  @map("fire_set_back") @db.Text
  utilityNotes                  String?  @map("utility_notes") @db.Text
  designNotes                   String?  @map("design_notes") @db.Text
  iebcAccepted                  String?  @map("iebc_accepted") @db.VarChar(300)
  structuralObservationRequired String?  @map("structural_observation_required") @db.VarChar(20)
  digitalSignatureType          String?  @map("digital_signature_type") @db.VarChar(300)
  windUpliftCalculationRequired String?  @map("wind_uplift_calculation_required") @db.VarChar(300)
  windSpeed                     String?  @map("wind_speed") @db.VarChar(300)
  windExposure                  String?  @map("wind_exposure") @db.VarChar(300)
  snowLoadGround                String?  @map("snow_load_ground") @db.VarChar(300)
  snowLoadFlatRoof              String?  @map("snow_load_flat_roof") @db.VarChar(300)
  snowLoadSlopedRoof            String?  @map("snow_load_sloped_roof") @db.VarChar(300)
  wetStampsRequired             String?  @map("wet_stamps_required") @db.VarChar(300)
  ofWetStamps                   String?  @map("of_wet_stamps") @db.VarChar(300)
  wetStampSize                  String?  @map("wet_stamp_size") @db.VarChar(300)
  engineeringNotes              String?  @map("engineering_notes") @db.Text
  electricalNotes               String?  @map("electrical_notes") @db.Text
  stateCode                     String?  @map("state_code") @db.VarChar(20)
  funcStat                      String?  @map("func_stat") @db.VarChar(300)
  address                       String?  @map("address") @db.VarChar(300)
  lsadCode                      String?  @map("lsad_code") @db.VarChar(20)
  usps                          String?  @map("usps") @db.VarChar(20)
  ansiCode                      String?  @map("ansi_code") @db.VarChar(20)
  longName                      String?  @map("long_name") @db.VarChar(300)
  countyCode                    String?  @map("county_code") @db.VarChar(20)
  modifiedAt                    DateTime @default(now()) @map("modified_at") @db.DateTime(0)
  updatedBy                     String   @default("system") @map("updated_by") @db.VarChar(300)

  @@map("ahj_notes")
}

model AHJNoteHistory {
  id                            Int      @id @default(autoincrement()) @db.UnsignedInt
  geoId                         String   @map("geo_id") @db.VarChar(20)
  geoIdState                    String   @map("geo_id_state") @db.VarChar(20)
  geoIdCounty                   String?  @map("geo_id_county") @db.VarChar(20)
  geoIdCountySubdivision        String?  @map("geo_id_county_subdivision") @db.VarChar(20)
  geoIdPlace                    String?  @map("geo_id_place") @db.VarChar(20)
  name                          String   @map("name") @db.VarChar(300)
  fullAhjName                   String   @map("full_ahj_name") @db.VarChar(300)
  queryState                    String?  @map("query_state") @db.VarChar(20)
  queryCounty                   String?  @map("query_county") @db.VarChar(200)
  website                       String?  @map("website") @db.VarChar(242)
  specificFormRequired          String?  @map("specific_form_required") @db.VarChar(200)
  buildingCodes                 String?  @map("building_codes") @db.Text
  generalNotes                  String?  @map("general_notes") @db.Text
  pvMeterRequired               String?  @map("pv_meter_required") @db.VarChar(200)
  acDisconnectRequired          String?  @map("ac_disconnect_required") @db.VarChar(200)
  centerFed120Percent           String?  @map("center_fed_120_percent") @db.VarChar(200)
  deratedAmpacity               String?  @map("derated_ampacity") @db.VarChar(200)
  fireSetBack                   String?  @map("fire_set_back") @db.Text
  utilityNotes                  String?  @map("utility_notes") @db.Text
  designNotes                   String?  @map("design_notes") @db.Text
  iebcAccepted                  String?  @map("iebc_accepted") @db.VarChar(300)
  structuralObservationRequired String?  @map("structural_observation_required") @db.VarChar(20)
  digitalSignatureType          String?  @map("digital_signature_type") @db.VarChar(300)
  windUpliftCalculationRequired String?  @map("wind_uplift_calculation_required") @db.VarChar(300)
  windSpeed                     String?  @map("wind_speed") @db.VarChar(300)
  windExposure                  String?  @map("wind_exposure") @db.VarChar(300)
  snowLoadGround                String?  @map("snow_load_ground") @db.VarChar(300)
  snowLoadFlatRoof              String?  @map("snow_load_flat_roof") @db.VarChar(300)
  snowLoadSlopedRoof            String?  @map("snow_load_sloped_roof") @db.VarChar(300)
  wetStampsRequired             String?  @map("wet_stamps_required") @db.VarChar(300)
  ofWetStamps                   String?  @map("of_wet_stamps") @db.VarChar(300)
  wetStampSize                  String?  @map("wet_stamp_size") @db.VarChar(300)
  engineeringNotes              String?  @map("engineering_notes") @db.Text
  electricalNotes               String?  @map("electrical_notes") @db.Text
  stateCode                     String?  @map("state_code") @db.VarChar(20)
  funcStat                      String?  @map("func_stat") @db.VarChar(300)
  address                       String?  @map("address") @db.VarChar(300)
  lsadCode                      String?  @map("lsad_code") @db.VarChar(20)
  usps                          String?  @map("usps") @db.VarChar(20)
  ansiCode                      String?  @map("ansi_code") @db.VarChar(20)
  type                          String?  @db.VarChar(20)
  longName                      String?  @map("long_name") @db.VarChar(300)
  countyCode                    String?  @map("county_code") @db.VarChar(20)
  createdAt                     DateTime @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt                     DateTime @updatedAt @map("updated_at") @db.DateTime(0)
  modifiedAt                    DateTime @map("modified_at") @db.DateTime(0)
  updatedBy                     String   @map("updated_by") @db.VarChar(300)

  @@map("ahj_note_history")
}

model contractors {
  id                                                String   @id @map("id") @db.VarChar(255)
  prepaidExpensesTotalCurrency                      Decimal? @map("prepaid_expenses_total_currency") @db.Decimal(12, 2)
  creditMemosTotalCurrency                          Decimal? @map("credit_memos_total_currency") @db.Decimal(12, 2)
  creditsReturnedToBarunCorpAsCashTotalCurrency     Decimal? @map("credits_returned_to_barun_corp_as_cash_total_currency") @db.Decimal(12, 2)
  totalVendorCreditsAppliedToVendorInvoicesCurrency Decimal? @map("total_vendor_credits_applied_to_vendor_invoices_currency") @db.Decimal(12, 2)
  remainingVendorCreditBalance                      Decimal? @map("remaining_vendor_credit_balance") @db.Decimal(12, 2)
  revenueShareCheckbox                              Int?     @map("revenue_share_checkbox") @db.TinyInt
  revisionRevenueShareCheckbox                      Int?     @map("revision_revenue_share_checkbox") @db.TinyInt
  organizationId                                    String?  @map("organization_id") @db.VarChar(255)
  organizationName                                  String?  @map("organization_name") @db.VarChar(255)
  type                                              String?  @db.VarChar(255)
}

model employees {
  userId       String   @map("user_id") @db.VarChar(255)
  annualSalary Decimal? @map("annual_salary") @db.Decimal(12, 2)
  id           String   @id @map("id") @db.VarChar(255)
}

model OrderedJobNotes {
  id              String   @id @map("id") @db.VarChar(255)
  content         String   @db.Text
  commenterName   String   @map("commneter_name") @db.VarChar(255)
  commenterUserId String   @map("commenter_user_id") @db.VarChar(255)
  jobId           String   @map("job_id") @db.VarChar(255)
  createdAt       DateTime @map("created_at") @db.DateTime(0)

  @@map("ordered_job_notes")
}

model OrderedJobs {
  id                                            String            @id @map("id") @db.VarChar(255)
  createdAt                                     DateTime          @map("created_at") @db.DateTime(0)
  project_number                                String?           @db.VarChar(255)
  invoiceId                                     String?           @map("invoice_id") @db.VarChar(255)
  revisionSize                                  String?           @map("revision_size") @db.VarChar(255)
  pricingType                                   String?           @map("pricing_type") @db.VarChar(255)
  clientOrganizationName                        String            @map("client_organization_name") @db.VarChar(255)
  clientOrganizationId                          String            @map("client_organization_id") @db.VarChar(255)
  projectId                                     String            @map("project_id") @db.VarChar(255)
  isExpedited                                   Boolean           @default(false) @map("is_expedited")
  clientUserId                                  String            @map("client_user_id") @db.VarChar(255)
  clientUserName                                String            @map("client_user_name") @db.VarChar(255)
  jobStatus                                     String?           @map("job_status") @db.Text
  jobName                                       String            @map("job_name") @db.VarChar(255)
  jobRequestNumber                              Int               @map("job_request_number")
  receivedAt                                    DateTime          @map("received_at") @db.DateTime(0)
  mountingType                                  String            @map("mounting_type") @db.VarChar(255)
  projectType                                   String            @map("project_type") @db.VarChar(255)
  numberOfWetStamp                              Int?              @map("number_of_wet_stamp") @db.UnsignedTinyInt
  dateSentToClient                              DateTime?         @map("date_sent_to_client") @db.Date
  propertyAddress                               String            @map("property_address") @db.Text
  systemSize                                    Decimal?          @map("system_size") @db.Decimal(10, 2)
  otherComments                                 String?           @map("other_comments") @db.Text
  mailingFullAddressForWetStamp                 String?           @map("mailing_full_address_for_wet_stamp") @db.VarChar(255)
  jobNotesF                                     String?           @map("job_notes_f") @db.Text
  additionalInformationFromClient               String?           @map("additional_information_from_client") @db.Text
  agreedMinimumUnits                            Decimal?          @map("agreed_minimum_units") @db.Decimal(10, 2)
  agreedRelatedTieredUnitDescription            Decimal?          @map("agreed_related_tiered_unit_description") @db.Decimal(10, 2)
  agreedTier1Operator                           String?           @map("agreed_tier_1_operator") @db.VarChar(255)
  agreedTier1Units                              Decimal?          @map("agreed_tier_1_units") @db.Decimal(10, 2)
  agreedTier2Operator                           String?           @map("agreed_tier_2_operator") @db.VarChar(255)
  agreedTier2Units                              Decimal?          @map("agreed_tier_2_units") @db.Decimal(10, 2)
  agreedTier3Operator                           String?           @map("agreed_tier_3_operator") @db.VarChar(255)
  agreedTier3Units                              Decimal?          @map("agreed_tier_3_units") @db.Decimal(10, 2)
  approvedForInvoice                            Boolean?          @map("approved_for_invoice")
  lineItemIssued                                Decimal?          @map("line_item_issued") @db.Decimal(10, 2)
  invoiceCancelledJob                           String?           @map("invoice_cancelled_job") @db.Text
  cancelJob                                     String?           @map("cancel_job") @db.Text
  chargeForAnyRevision                          Boolean?          @map("charge_for_any_revision")
  chargeForAnyRevisionOverride                  Boolean?          @map("charge_for_any_revision_override")
  chargeForAnyRevisionSnapshot                  Boolean?          @map("charge_for_any_revision_snapshot")
  clientContactEmail                            String            @map("client_contact_email") @db.VarChar(255)
  clientContactEmailOverride                    String?           @map("client_contact_email_override") @db.VarChar(255)
  commercialJobPrice                            Decimal?          @map("commercial_job_price") @db.Decimal(10, 2)
  completedCancelledDate                        DateTime?         @map("completed_cancelled_date") @db.Date
  updatedAt                                     DateTime          @updatedAt @map("updated_at") @db.DateTime(0)
  deliverablesLink                              String?           @map("deliverables_link") @db.Text
  deliverablesEmail                             String?           @map("deliverables_email") @db.Text
  electricalPEAndWetStampGlSolargraf            Boolean?          @map("electrical_pe_and_wet_stamp_gl_solargraf")
  estimatedDaysToComplete                       Int?              @map("estimated_days_to_complete")
  estimatedDaysToCompleteOverride               Int?              @map("estimated_days_to_complete_override")
  everOnHold                                    Boolean?          @map("ever_on_hold")
  exportId                                      String?           @map("export_id") @db.Text
  formulaSandbox                                String?           @map("formula_sandbox") @db.VarChar(255)
  formulaSandboxCountdown                       String?           @map("formula_sandbox_countdown") @db.Text
  formulaSandboxParcelTracker                   String?           @map("formula_sandbox_parcel_tracker") @db.Text
  formulaSandbox2                               String?           @map("formula_sandbox_2") @db.Text
  formulaSandbox3                               String?           @map("formula_sandbox_3") @db.Text
  formulaSandbox4                               String?           @map("formula_sandbox_4") @db.Text
  formulaSandbox5                               String?           @map("formula_sandbox_5") @db.Text
  formulaSandbox6                               String?           @map("formula_sandbox_6") @db.Text
  googleDriveJobDeliverablesFolderId            String?           @map("google_drive_job_deliverables_folder_id") @db.Text
  googleDriveJobFolderId                        String?           @map("google_drive_job_folder_id") @db.Text
  inReview                                      Boolean?          @map("in_review")
  isDesignJob                                   Boolean?          @map("is_design_job")
  isLocked                                      Boolean?          @map("is_locked")
  isRevision                                    Boolean?          @map("is_revision")
  updatedBy                                     String            @map("updated_by") @db.VarChar(255)
  maximumMessageDateTime                        DateTime?         @map("maximum_message_date_time") @db.DateTime(0)
  maximumUnixTime                               Decimal?          @map("maximum_unix_time") @db.Decimal(20, 0)
  adminComments                                 String?           @map("admin_comments") @db.Text
  relatedLineItem                               Decimal?          @map("related_line_item") @db.Decimal(10, 2)
  restrictedAccess                              Boolean?          @map("restricted_access")
  serviceOrderId                                Int?              @map("service_order_id")
  showClientStructuralUpgradeMessage            Boolean?          @map("show_client_structural_upgrade_message")
  sixMonthsPrior                                DateTime?         @map("six_months_prior") @db.Date
  standardPricing                               Boolean?          @map("standard_pricing")
  structuralOrElectricalPEAndWetStampSelectedGl Boolean?          @map("structural_or_electrical_pe_and_wet_stamp_selected_gl")
  mailingAdderssCity                            String?           @map("mailing_adderss_city") @db.VarChar(255)
  mailingAdderssState                           String?           @map("mailing_adderss_state") @db.VarChar(255)
  mailingAdderssCoordinates                     String?           @map("mailing_adderss_coordinates") @db.VarChar(255)
  mailingAdderssStreet1                         String?           @map("mailing_adderss_street1") @db.VarChar(255)
  mailingAdderssStreet2                         String?           @map("mailing_adderss_street2") @db.VarChar(255)
  mailingAdderssPostalCode                      String?           @map("mailing_adderss_postal_code") @db.VarChar(255)
  mailingAdderssPostalCountry                   String?           @map("mailing_adderss_country") @db.VarChar(255)
  dueDate                                       DateTime?         @map("due_date") @db.DateTime(0)
  loadCalcOrigin                                String            @default("Self") @map("load_calc_origin") @db.VarChar(255)
  project                                       OrderedProjects?  @relation(fields: [projectId], references: [id])
  orderedServices                               OrderedServices[]
  assignedTasks                                 AssignedTasks[]
  invoice                                       Invoices?         @relation(fields: [invoiceId], references: [id])

  @@map("ordered_jobs")
}

model OrderedProjects {
  id                                            String         @id @map("id") @db.VarChar(255)
  propertyAddressCoordinates                    String         @map("property_address_coordinates") @db.VarChar(255)
  projectPropertyType                           String         @map("project_property_type") @db.VarChar(255)
  mountingType                                  String?        @map("mounting_type") @db.VarChar(255)
  mailingAddressForWetStamps                    String?        @map("mailing_address_for_wet_stamps") @db.VarChar(255)
  systemSize                                    Decimal?       @map("system_size") @db.Decimal(10, 2)
  dateCreated                                   DateTime       @map("date_created") @db.DateTime(0)
  hasHistoryStructuralPEStamp                   Boolean        @default(false) @map("has_history_structural_pe_stamp")
  hasHistoryElectricalPEStamp                   Boolean        @default(false) @map("has_history_electrical_pe_stamp")
  projectFolder                                 String?        @map("project_folder") @db.VarChar(255)
  projectNumber                                 String?        @map("project_number") @db.VarChar(255)
  propertyFullAddress                           String         @map("property_full_address") @db.VarChar(255)
  propertyAddressStreet1                        String         @map("property_address_street1") @db.VarChar(255)
  propertyAddressStreet2                        String?        @map("property_address_street2") @db.VarChar(255)
  propertyAddressCity                           String         @map("property_address_city") @db.VarChar(255)
  propertyAddressState                          String         @map("property_address_state") @db.VarChar(255)
  propertyAddressPostalCode                     String         @map("property_address_postal_code") @db.VarChar(10)
  propertyOwnerName                             String?        @map("property_owner_name") @db.VarChar(255)
  organizationName                              String         @map("organization_name") @db.VarChar(255)
  masterLogUpload                               Boolean?       @map("master_log_upload")
  ahjAutomationComplete                         Boolean?       @map("ahj_automation_complete")
  updatedAt                                     DateTime       @updatedAt @map("updated_at") @db.DateTime(0)
  exportId                                      String?        @map("export_id") @db.VarChar(255)
  googleGeocoder                                String?        @map("google_geocoder") @db.VarChar(255)
  reTriggerActivateCreateProjectFolderTrigger   Boolean?       @map("re_trigger_activate_create_project_folder_trigger")
  lastModifiedBy                                String         @map("last_modified_by") @db.VarChar(255)
  newBatteryStorageDesign                       Boolean?       @map("new_battery_storage_design")
  numberOfWetStamps                             Int?           @map("number_of_wet_stamps")
  numberOfStructuralWetStamps                   Int?           @map("number_of_structural_wet_stamps")
  numberOfElectricalWetStamps                   Int?           @map("number_of_electrical_wet_stamps")
  googleDriveClientAccountActiveFolderId        String?        @map("google_drive_client_account_active_folder_id") @db.VarChar(255)
  sandboxCheckbox                               Boolean?       @map("sandbox_checkbox")
  ahjAutomationLastRunDate                      DateTime?      @map("ahj_automation_last_run_date") @db.DateTime(0)
  sandboxFormula                                String?        @map("sandbox_formula") @db.VarChar(255)
  containerId1                                  String?        @map("container_id_1") @db.VarChar(255)
  newShareDriveStructure                        String?        @map("new_share_drive_structure") @db.VarChar(255)
  stateId                                       String         @map("state_id") @db.VarChar(255)
  countyId                                      String?        @map("county_id") @db.VarChar(255)
  countySubdivisionsId                          String?        @map("county_subdivisions_id") @db.VarChar(255)
  placeId                                       String?        @map("place_id") @db.VarChar(255)
  ahjId                                         String?        @map("ahj_id") @db.VarChar(255)
  isGroundMount                                 Boolean?       @map("is_ground_mount")
  mailingAddressForStructuralWetStamp           String?        @map("mailing_address_for_structural_wet_stamp") @db.VarChar(255)
  mailingAddressForElectricalWetStamp           String?        @map("mailing_address_for_electrical_wet_stamp") @db.VarChar(255)
  clientOrganizationId                          String         @map("client_organization_id") @db.VarChar(255)
  designOrPeStampPreviouslyDoneOnProjectOutside Int?           @map("design_or_pe_stamp_previously_done_on_project_outside")
  totalOfJobs                                   Int            @default(1) @map("total_of_jobs")
  propertyAddressCountry                        String?        @map("property_address_country") @db.VarChar(255)
  organization                                  Organizations? @relation(fields: [clientOrganizationId], references: [id])
  jobs                                          OrderedJobs[]

  @@map("ordered_projects")
}

model pricings {
  id                                               String   @id @map("id") @db.VarChar(255)
  organizationId                                   String?  @map("organization_id") @db.VarChar(255)
  serviceId                                        String?  @map("service_id") @db.VarChar(255)
  organizationName                                 String?  @map("organization_name") @db.VarChar(255)
  taskName                                         String?  @map("task_name") @db.VarChar(255)
  flatPrice                                        Decimal? @map("flat_price") @db.Decimal(10, 2)
  newStorageDesignAdditionalPrice                  Decimal? @map("new_storage_design_additional_price") @db.Decimal(10, 2)
  additionalOrReplacedStorageDesignAdditionalPrice Decimal? @map("additional_or_replaced_storage_design_additional_price") @db.Decimal(10, 2)
  flatMajorRevisionPrice                           Decimal? @map("flat_major_revision_price") @db.Decimal(10, 2)
  flatMinorRevisionPrice                           Decimal? @map("flat_minor_revision_price") @db.Decimal(10, 2)
  flatGroundMountPrice                             Decimal? @map("flat_ground_mount_price") @db.Decimal(10, 2)
  flatGroundMountMajorRevisionPrice                Decimal? @map("flat_ground_mount_major_revision_price") @db.Decimal(10, 2)
  flatGroundMountMinorRevisionPrice                Decimal? @map("flat_ground_mount_minor_revision_price") @db.Decimal(10, 2)
  unitPrice                                        Decimal? @map("unit_price") @db.Decimal(10, 2)
  tier1Operator                                    String?  @map("tier_1_operator") @db.VarChar(255)
  tier1Units                                       Decimal? @map("tier_1_units") @db.Decimal(10, 0)
  tier1Price                                       Decimal? @map("tier_1_price") @db.Decimal(10, 2)
  tier1MajorRevisionPrice                          Decimal? @map("tier_1_major_revision_price") @db.Decimal(10, 2)
  tier1MinorRevisionPrice                          Decimal? @map("tier_1_minor_revision_price") @db.Decimal(10, 2)
  tier1GroundMountPrice                            Decimal? @map("tier_1_ground_mount_price") @db.Decimal(10, 2)
  tier1GroundMountMajorRevisionPrice               Decimal? @map("tier_1_ground_mount_major_revision_price") @db.Decimal(10, 2)
  tier1GroundMountMinorRevisionPrice               Decimal? @map("tier_1_ground_mount_minor_revision_price") @db.Decimal(10, 2)
  tier2Operator                                    String?  @map("tier_2_operator") @db.VarChar(255)
  tier2Units                                       Decimal? @map("tier_2_units") @db.Decimal(10, 0)
  tier2Price                                       Decimal? @map("tier_2_price") @db.Decimal(10, 2)
  tier2MajorRevisionPrice                          Decimal? @map("tier_2_major_revision_price") @db.Decimal(10, 2)
  tier2MinorRevisionPrice                          Decimal? @map("tier_2_minor_revision_price") @db.Decimal(10, 2)
  tier2GroundMountPrice                            Decimal? @map("tier_2_ground_mount_price") @db.Decimal(10, 2)
  tier2GroundMountMajorRevisionPrice               Decimal? @map("tier_2_ground_mount_major_revision_price") @db.Decimal(10, 2)
  tier2GroundMountMinorRevisionPrice               Decimal? @map("tier_2_ground_mount_minor_revision_price") @db.Decimal(10, 2)
  tier3Operator                                    String?  @map("tier_3_operator") @db.VarChar(255)
  tier3Units                                       Decimal? @map("tier_3_units") @db.Decimal(10, 0)
  tier3Price                                       Decimal? @map("tier_3_price") @db.Decimal(10, 2)
  tier3MajorRevisionPrice                          Decimal? @map("tier_3_major_revision_price") @db.Decimal(10, 2)
  tier3MinorRevisionPrice                          Decimal? @map("tier_3_minor_revision_price") @db.Decimal(10, 2)
  tier3GroundMountPrice                            Decimal? @map("tier_3_ground_mount_price") @db.Decimal(10, 2)
  tier3GroundMountMajorRevisionPrice               Decimal? @map("tier_3_ground_mount_major_revision_price") @db.Decimal(10, 2)
  tier3GroundMountMinorRevisionPrice               Decimal? @map("tier_3_ground_mount_minor_revision_price") @db.Decimal(10, 2)
  countDuplicates                                  Decimal? @map("count_duplicates") @db.Decimal(10, 0)
  createdAt                                        DateTime @map("created_at") @db.DateTime(0)
  updatedAt                                        DateTime @updatedAt @map("updated_at") @db.DateTime(0)
  updatedBy                                        String?  @map("updated_by") @db.VarChar(255)
  serviceBillingCodeNew                            String?  @map("service_billing_code_new") @db.VarChar(255)
  taskGroupRevisionPrice                           Decimal? @map("task_group_revision_price") @db.Decimal(10, 2)
  tier1RelatedOperator                             Decimal? @map("tier_1_related_operator") @db.Decimal(10, 0)
  tier2RelatedOperator                             Decimal? @map("tier_2_related_operator") @db.Decimal(10, 0)
  tier3RelatedOperator                             Decimal? @map("tier_3_related_operator") @db.Decimal(10, 0)
  relatedService                                   Decimal? @map("related_service") @db.Decimal(10, 0)
  oldRelatedTieredUnitDescription                  Decimal? @map("old_related_tiered_unit_description") @db.Decimal(10, 0)
  clientAccountTieredPricing                       Boolean? @map("client_account_tiered_pricing")
  clientAccount                                    String?  @map("client_account") @db.VarChar(255)
  relatedClientAccount                             Decimal? @map("related_client_account") @db.Decimal(10, 0)
  internalAccountAccountName                       String?  @map("internal_account_account_name") @db.VarChar(255)
  relatedInternalAccount                           Decimal? @map("related_internal_account") @db.Decimal(10, 0)
  oldPriceGroupGroupName                           String?  @map("old_price_group_group_name") @db.VarChar(255)
  relatedPriceGroup                                Decimal? @map("related_price_group") @db.Decimal(10, 0)
  propertyType                                     String?  @map("property_type") @db.VarChar(255)
  relatedPropertyType                              Decimal? @map("related_property_type") @db.Decimal(10, 0)
  recordStatus                                     String?  @map("record_status") @db.VarChar(255)
  relatedRecordStatus                              Decimal? @map("related_record_status") @db.Decimal(10, 0)
}

model ClientAccounts {
  id                                           String   @id @map("id") @db.VarChar(255)
  userId                                       String?  @map("user_id") @db.VarChar(255)
  firstName                                    String?  @map("first_name") @db.VarChar(255)
  lastName                                     String?  @map("last_name") @db.VarChar(255)
  isMultipleContainers                         Int?     @map("is_multiple_containers") @db.TinyInt
  isRestrictedAccess                           Int?     @map("is_restricted_access") @db.TinyInt
  fileStorageContainerUrl                      String?  @map("file_storage_container_url") @db.VarChar(255)
  fileStorageContainerId                       String?  @map("file_storage_container_id") @db.VarChar(255)
  fileStorageClientAccountFolderUrlFormulaUrl  String?  @map("file_storage_client_account_folder_url_formula_url") @db.VarChar(255)
  fileStorageClientAccountFolderId             String?  @map("file_storage_client_account_folder_id") @db.VarChar(255)
  googleDriveClientAccountCommercialFolderUrl  String?  @map("google_drive_client_account_commercial_folder_url") @db.VarChar(255)
  googleDriveClientAccountCommercialFolderId   String?  @map("google_drive_client_account_commercial_folder_id") @db.VarChar(255)
  googleDriveClientAccountIndustrialFolderUrl  String?  @map("google_drive_client_account_industrial_folder_url") @db.VarChar(255)
  googleDriveClientAccountIndustrialFolderId   String?  @map("google_drive_client_account_industrial_folder_id") @db.VarChar(255)
  googleDriveClientAccountResidentialFolderUrl String?  @map("google_drive_client_account_residential_folder_url") @db.VarChar(255)
  googleDriveClientAccountResidentialFolderId  String?  @map("google_drive_client_account_residential_folder_id") @db.VarChar(255)
  triggerCreateGoogleDriveClientAccountFolders String?  @map("trigger_create_google_drive_client_account_folders") @db.VarChar(255)
  remainingCreditBalance                       Int?     @map("remaining_credit_balance")
  designNotes                                  String?  @map("design_notes") @db.Text
  electricalEngineeringNotes                   String?  @map("electrical_engineering_notes") @db.Text
  structuralEngineeringNotes                   String?  @map("structural_engineering_notes") @db.Text
  prepaidServicesTotal                         Decimal? @map("prepaid_services_total") @db.Decimal(10, 2)
  creditsReturnedToClientAsCashTotal           Decimal? @map("credits_returned_to_client_as_cash_total") @db.Decimal(10, 2)
  creditMemosTotal                             Decimal? @map("credit_memos_total") @db.Decimal(10, 2)
  totalCreditsAppliedToInvoices                Decimal? @map("total_credits_applied_to_invoices") @db.Decimal(10, 2)

  @@map("client_accounts")
}

model Tasks {
  id                 String               @id @map("id") @db.VarChar(255)
  serviceId          String               @map("service_id") @db.VarChar(255)
  name               String               @map("name") @db.VarChar(255)
  serviceName        String               @map("service_name") @db.VarChar(255)
  license_type       String?              @db.VarChar(255)
  service            Service              @relation(fields: [serviceId], references: [id])
  assignedTasks      AssignedTasks[]
  userAvailableTasks UserAvailableTasks[]

  @@map("tasks")
}

model AssignedTasks {
  id                       String          @id @map("id") @db.VarChar(255)
  taskId                   String          @map("task_id") @db.VarChar(255)
  taskName                 String          @map("task_name") @db.VarChar(255)
  status                   String          @map("status") @db.VarChar(255)
  cost                     Decimal?        @db.Decimal(13, 4)
  is_expedited             Boolean         @default(false)
  is_active                Boolean         @default(false)
  isRevision               Boolean         @map("is_revision")
  isVendor                 Boolean         @map("is_vendor")
  startedAt                DateTime?       @map("started_at") @db.DateTime(0)
  doneAt                   DateTime?       @map("done_at") @db.DateTime(0)
  duration                 Int?            @db.TinyInt
  description              String?         @db.Text
  vendorInvoiceId          String?         @map("vendor_invoice_id") @db.VarChar(255)
  assigneeId               String?         @map("assignee_id") @db.VarChar(255)
  assigneeName             String?         @map("assignee_name") @db.VarChar(255)
  assigneeOrganizationId   String?         @map("assignee_organization_id") @db.VarChar(255)
  assigneeOrganizationName String?         @map("assignee_organization_name") @db.VarChar(255)
  orderedServiceId         String          @map("ordered_service_id") @db.VarChar(255)
  serviceId                String          @map("service_id") @db.VarChar(255)
  serviceName              String          @map("service_name") @db.VarChar(255)
  projectId                String          @map("project_id") @db.VarChar(255)
  projectNumber            String?         @map("project_number") @db.VarChar(255)
  projectPropertyOwnerName String?         @map("project_property_owner_name") @db.VarChar(255)
  projectPropertyType      String          @map("project_property_type") @db.VarChar(255)
  jobId                    String          @map("job_id") @db.VarChar(255)
  jobName                  String          @map("job_name") @db.VarChar(255)
  mountingType             String          @map("mounting_type") @db.VarChar(255)
  organizationId           String          @map("organization_id") @db.VarChar(255)
  organizationName         String          @map("organization_name") @db.VarChar(255)
  created_at               DateTime        @db.DateTime(0)
  task                     Tasks           @relation(fields: [taskId], references: [id])
  orderedService           OrderedServices @relation(fields: [orderedServiceId], references: [id])
  job                      OrderedJobs     @relation(fields: [jobId], references: [id])
  user                     Users?          @relation(fields: [assigneeId], references: [id])
  assigneeOrganization     Organizations?  @relation(fields: [assigneeOrganizationId], references: [id])

  @@map("assigned_tasks")
}

model CreditTransactions {
  id                   String                            @id @map("id") @db.VarChar(255)
  clientOrganizationId String                            @map("client_organization_id") @db.VarChar(255)
  createdBy            String                            @map("created_by") @db.VarChar(255)
  amount               Decimal                           @map("amount") @db.Decimal(13, 4)
  transactionType      CreditTransactionsTransactionType @map("transaction_type")
  relatedInvoiceId     String?                           @map("related_invoice_id") @db.VarChar(255)
  transactionDate      DateTime?                         @default(now()) @map("transaction_date") @db.Timestamp(0)

  @@index([clientOrganizationId], map: "client_organization_id")
  @@index([relatedInvoiceId], map: "related_invoice_id")
  @@map("credit_transactions")
}

model Invoices {
  id                   String         @id @map("id") @db.VarChar(255)
  status               InvoicesStatus @default(Unissued) @map("status")
  invoiceDate          DateTime       @default(now()) @map("invoice_date") @db.Date
  terms                Int            @default(30) @map("terms") @db.UnsignedTinyInt
  dueDate              DateTime?      @map("due_date") @db.Date
  notesToClient        String?        @map("notes_to_client") @db.Text
  createdAt            DateTime       @default(now()) @map("createdAt") @db.Timestamp(0)
  updatedAt            DateTime       @default(now()) @updatedAt @map("updatedAt") @db.Timestamp(0)
  clientOrganizationId String         @map("client_organization_id") @db.VarChar(255)
  organizationName     String         @map("organization_name") @db.VarChar(255)
  serviceMonth         DateTime       @map("service_month") @db.Date
  subTotal             Decimal        @map("sub_total") @db.Decimal(13, 4)
  discount             Decimal        @db.Decimal(13, 4)
  total                Decimal        @db.Decimal(13, 4)
  organization         Organizations  @relation(fields: [clientOrganizationId], references: [id])
  jobs                 OrderedJobs[]
  payments             Payments[]

  @@index([clientOrganizationId], map: "client_organization_id")
  @@map("invoices")
}

model Payments {
  id            String                @id @map("id") @db.VarChar(255)
  invoiceId     String                @map("invoice_id") @db.VarChar(255)
  amount        Decimal               @map("amount") @db.Decimal(13, 4)
  paymentMethod PaymentsPaymentMethod @map("payment_method")
  paymentDate   DateTime              @default(now()) @map("payment_date") @db.Timestamp(0)
  notes         String?               @map("notes") @db.Text
  canceledAt    DateTime?             @map("canceled_at") @db.DateTime(0)
  createdBy     String                @map("created_by") @db.VarChar(255)
  invoice       Invoices              @relation(fields: [invoiceId], references: [id])

  @@index([invoiceId], map: "invoice_id")
  @@map("payments")
}

model CustomCommercialPricingTiers {
  serviceId        String   @map("service_id") @db.VarChar(255)
  serviceName      String   @map("service_name") @db.VarChar(255)
  organizationId   String   @map("organization_id") @db.VarChar(255)
  organizationName String   @map("organization_name") @db.VarChar(255)
  startingPoint    Decimal  @map("starting_point") @db.Decimal(13, 4)
  finishingPoint   Decimal? @map("finishing_point") @db.Decimal(13, 4)
  price            Decimal  @db.Decimal(13, 4)
  gmPrice          Decimal  @map("gm_price") @db.Decimal(13, 4)

  @@id([serviceId, organizationId, startingPoint])
  @@map("custom_commercial_pricing_tiers")
}

model CustomFixedPricings {
  serviceId        String  @map("service_id") @db.VarChar(255)
  serviceName      String  @map("service_name") @db.VarChar(255)
  organizationId   String  @map("organization_id") @db.VarChar(255)
  organizationName String  @map("organization_name") @db.VarChar(255)
  price            Decimal @db.Decimal(13, 4)

  @@id([serviceId, organizationId])
  @@map("custom_fixed_pricings")
}

model CustomResidentialPricingTiers {
  serviceId        String  @map("service_id") @db.VarChar(200)
  serviceName      String  @map("service_name") @db.VarChar(200)
  organizationId   String  @map("organization_id") @db.VarChar(255)
  organizationName String  @map("organization_name") @db.VarChar(255)
  startingPoint    Int     @map("starting_point") @db.UnsignedInt
  finishingPoint   Int?    @map("finishing_point") @db.UnsignedInt
  price            Decimal @db.Decimal(13, 4)
  gmPrice          Decimal @map("gm_price") @db.Decimal(13, 4)

  @@id([serviceId, organizationId, startingPoint])
  @@map("custom_residential_pricing_tiers")
}

model CustomResidentialRevisionPricings {
  serviceId        String  @map("service_id") @db.VarChar(255)
  serviceName      String  @map("service_name") @db.VarChar(255)
  organizationId   String  @map("organization_id") @db.VarChar(255)
  organizationName String  @map("organization_name") @db.VarChar(255)
  price            Decimal @db.Decimal(13, 4)
  gmPrice          Decimal @map("gm_price") @db.Decimal(13, 4)

  @@id([serviceId, organizationName])
  @@map("custom_residential_revision_pricings")
}

model CommercialStandardPricingTiers {
  serviceId      String   @map("service_id") @db.VarChar(255)
  serviceName    String   @map("service_name") @db.VarChar(255)
  startingPoint  Decimal  @map("starting_point") @db.Decimal(13, 4)
  finishingPoint Decimal? @map("finishing_point") @db.Decimal(13, 4)
  price          Decimal  @db.Decimal(13, 4)
  gmPrice        Decimal  @map("gm_price") @db.Decimal(13, 4)
  service        Service  @relation(fields: [serviceId], references: [id])

  @@id([serviceId, startingPoint])
  @@map("commercial_standard_pricing_tiers")
}

model CustomPricings {
  id                              String  @id @map("id") @db.VarChar(255)
  organizationId                  String  @map("organization_id") @db.VarChar(255)
  organizationName                String  @map("organization_name") @db.VarChar(255)
  serviceId                       String  @map("service_id") @db.VarChar(255)
  serviceName                     String  @map("service_name") @db.VarChar(255)
  hasResidentialNewServicePricing Boolean @map("has_residential_new_service_pricing")
  hasResidentialRevisionPricing   Boolean @map("has_residential_revision_pricing")
  hasCommercialNewServiceTier     Boolean @map("has_commercial_new_service_tier")
  hasFixedPricing                 Boolean @map("has_fixed_pricing")

  @@unique([organizationId, serviceId], map: "organization_id")
  @@map("custom_pricings")
}

model ExpensePricings {
  id                 String  @id @db.VarChar(255)
  taskId             String  @map("task_id") @db.VarChar(255)
  organizationId     String  @map("organization_id") @db.VarChar(255)
  taskName           String  @map("task_name") @db.VarChar(255)
  resiNewExpenseType String  @map("resi_new_expense_type") @db.VarChar(255)
  resiNewValue       Decimal @map("resi_new_value") @db.Decimal(13, 4)
  resiRevExpenseType String  @map("resi_rev_expense_type") @db.VarChar(255)
  resiRevValue       Decimal @map("resi_rev_value") @db.Decimal(13, 4)
  comNewExpenseType  String  @map("com_new_expense_type") @db.VarChar(255)
  comNewValue        Decimal @map("com_new_value") @db.Decimal(13, 4)
  comRevExpenseType  String  @map("com_rev_expense_type") @db.VarChar(255)
  comRevValue        Decimal @map("com_rev_value") @db.Decimal(13, 4)

  @@unique([taskId, organizationId], map: "task_id")
  @@map("expense_pricings")
}

model VendorInvoices {
  id                      String           @id @db.VarChar(255)
  invoiceNumber           String           @map("invoice_number") @db.VarChar(255)
  organizationId          String           @map("organization_id") @db.VarChar(255)
  organizationName        String           @map("organization_name") @db.VarChar(255)
  invoiceDate             DateTime         @map("invoice_date") @db.DateTime(0)
  terms                   Int              @map("terms") @db.TinyInt
  dueDate                 DateTime?        @map("due_date") @db.DateTime(0)
  daysPastDue             DateTime?        @map("days_past_due") @db.DateTime(0)
  note                    String?          @map("note") @db.Text
  serviceMonth            DateTime         @map("service_month") @db.Date
  subTotal                Decimal          @map("sub_total") @db.Decimal(13, 4)
  total                   Decimal          @map("total") @db.Decimal(13, 4)
  invoiceTotalDifference  Decimal          @map("invoice_total_difference") @db.Decimal(13, 4)
  internalTotalBalanceDue Decimal?         @map("internal_total_balance_due") @db.Decimal(13, 4)
  createdAt               DateTime?        @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt               DateTime?        @default(now()) @map("updated_at") @db.Timestamp(0)
  transaction_type        String?          @db.VarChar(255)
  count_line_items        Int
  vendorPayments          VendorPayments[]
  organization            Organizations    @relation(fields: [organizationId], references: [id])

  @@map("vendor_invoices")
}

model VendorPayments {
  id              String                @id @map("id") @db.VarChar(255)
  vendorInvoiceId String                @map("vendor_invoice_id") @db.VarChar(255)
  amount          Decimal               @map("amount") @db.Decimal(13, 4)
  paymentMethod   PaymentsPaymentMethod @map("payment_method")
  paymentDate     DateTime              @default(now()) @map("payment_date") @db.Timestamp(0)
  notes           String?               @map("notes") @db.Text
  canceledAt      DateTime?             @map("canceled_at") @db.DateTime(0)
  createdBy       String                @map("created_by") @db.VarChar(255)
  vendorInvoice   VendorInvoices        @relation(fields: [vendorInvoiceId], references: [id])

  @@map("vendor_payments")
}

model PositionTasks {
  id                 Int    @id @default(autoincrement()) @db.UnsignedInt
  positionId         String @map("position_id") @db.VarChar(255)
  positionName       String @map("position_name") @db.VarChar(255)
  taskId             String @map("task_id") @db.VarChar(255)
  taskName           String @map("task_name") @db.VarChar(255)
  order              Int    @db.UnsignedTinyInt
  autoAssignmentType String @map("auto_assignment_type") @db.VarChar(255)

  @@map("position_tasks")
}

model UserAvailableTasks {
  id                 Int       @id @default(autoincrement()) @db.UnsignedInt
  userId             String    @map("user_id") @db.VarChar(255)
  userName           String    @map("user_name") @db.VarChar(255)
  taskId             String    @map("task_id") @db.VarChar(255)
  taskName           String    @map("task_name") @db.VarChar(255)
  autoAssignmentType String    @map("auto_assignment_type") @db.VarChar(255)
  isHandRaised       Boolean   @map("is_hand_raised")
  raisedAt           DateTime? @map("raised_at") @db.DateTime(0)
  userPositionId     String?   @map("user_position_id") @db.VarChar(255)
  user               Users?    @relation(fields: [userId], references: [id])
  task               Tasks?    @relation(fields: [taskId], references: [id])

  @@map("user_available_tasks")
}

model UserLicense {
  userId             String    @map("user_id")
  userName           String    @map("user_name")
  issuingCountryName String    @map("issuing_country_name")
  abbreviation       String
  type               String    @db.VarChar(255)
  expiryDate         DateTime? @map("expiry_date")
  updatedAt          DateTime  @map("updated_at") @db.DateTime(0)
  createdAt          DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  user               Users?    @relation(fields: [userId], references: [id])

  @@unique([userId, abbreviation, type], map: "user_id_2")
  @@map("user_license")
}

model prerequisiteTasks {
  id                   Int    @id @default(autoincrement()) @db.UnsignedInt
  taskId               String @map("task_id") @db.VarChar(255)
  taskName             String @map("task_name") @db.VarChar(255)
  prerequisiteTaskId   String @map("prerequisite_task_id") @db.VarChar(255)
  prerequisiteTaskName String @map("prerequisite_task_name") @db.VarChar(255)

  @@unique([taskId, prerequisiteTaskId], map: "task_id")
  @@map("prerequisite_tasks")
}

model RejectedTaskReasons {
  id               String   @id @db.VarChar(255)
  assigneeUserId   String   @map("assignee_user_id") @db.VarChar(255)
  assigneeUserName String   @map("assignee_user_name") @db.VarChar(255)
  reason           String   @map("reason") @db.Text
  taskName         String   @map("task_name") @db.VarChar(255)
  assignedTaskId   String   @map("assigned_task_id") @db.VarChar(255)
  rejectedAt       DateTime @map("rejected_at") @db.DateTime(0)

  @@map("rejected_task_reasons")
}

model AssigningTaskAlerts {
  id                  String   @id @map("id") @db.VarChar(255)
  userId              String   @map("user_id") @db.VarChar(255)
  userName            String   @map("user_name") @db.VarChar(255)
  jobId               String   @map("job_id") @db.VarChar(255)
  assignedTaskId      String   @map("assigned_task_id") @db.VarChar(255)
  taskName            String   @map("task_name") @db.VarChar(255)
  projectPropertyType String   @map("project_property_type") @db.VarChar(255)
  mountingType        String   @map("mounting_type") @db.VarChar(255)
  isRevision          Boolean  @map("is_revision")
  note                String?  @map("note") @db.VarChar(255)
  createdAt           DateTime @map("created_at") @db.DateTime(0)
  isCheckedOut        Boolean  @map("is_checked_out")

  @@map("assigning_task_alerts")
}

model Ptos {
  id         String       @id @db.VarChar(255)
  userId     String       @map("user_id") @db.VarChar(255)
  tenure     Int          @map("tenure")
  total      Float        @map("total") @db.Float
  isPaid     Boolean      @map("is_paid")
  createdAt  DateTime     @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt  DateTime     @map("updated_at") @db.DateTime(0)
  endedAt    DateTime     @map("ended_at") @db.DateTime(0)
  startedAt  DateTime     @map("started_at") @db.DateTime(0)
  user       Users        @relation(fields: [userId], references: [id])
  PtoDetails PtoDetails[]

  @@unique([userId, tenure])
  @@map("ptos")
}

model PtoTypes {
  id                      String                    @id @db.VarChar(255)
  name                    String                    @unique @map("name") @db.VarChar(30)
  abbreviation            String                    @map("abbreviation") @db.VarChar(5)
  createdAt               DateTime                  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt               DateTime                  @map("updated_at") @db.DateTime(0)
  ptoTypesAvailableValues PtoTypesAvailableValues[]
  ptoDetails              PtoDetails[]

  @@map("pto_types")
}

model PtoAvailableValues {
  id                      String                    @id @db.VarChar(255)
  value                   Float                     @map("value") @db.Float
  createdAt               DateTime                  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt               DateTime                  @map("updated_at") @db.DateTime(0)
  ptoTypesAvailableValues PtoTypesAvailableValues[]

  @@map("pto_available_values")
}

model PtoTypesAvailableValues {
  ptoTypeId           String             @map("pto_type_id") @db.VarChar(255)
  ptoAvailableValueId String             @map("pto_available_value_id") @db.VarChar(255)
  ptoType             PtoTypes           @relation(fields: [ptoTypeId], references: [id], onDelete: Cascade)
  PtoAvailableValue   PtoAvailableValues @relation(fields: [ptoAvailableValueId], references: [id], onDelete: Cascade)

  @@id([ptoTypeId, ptoAvailableValueId])
  @@index([ptoTypeId])
  @@index([ptoAvailableValueId])
  @@map("pto_types_available_values")
}

model PtoDetails {
  id        String   @id @db.VarChar(255)
  ptoId     String   @map("pto_id") @db.VarChar(255)
  ptoTypeId String   @map("pto_type_id") @db.VarChar(255)
  amount    Float    @map("amount") @db.Float
  startedAt DateTime @map("started_at") @db.DateTime(0)
  createdAt DateTime @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime @map("updated_at") @db.DateTime(0)
  days      Int      @map("days")
  userId    String   @map("user_id") @db.VarChar(255)
  user      Users    @relation(fields: [userId], references: [id])
  pto       Ptos     @relation(fields: [ptoId], references: [id])
  ptoType   PtoTypes @relation(fields: [ptoTypeId], references: [id])

  @@index([userId])
  @@index([ptoId])
  @@index([ptoTypeId])
  @@map("pto_details")
}

model PtoTenurePolicies {
  id        String   @id @db.VarChar(255)
  tenure    Int      @unique @map("tenure") @db.TinyInt
  total     Float    @map("total") @db.Float
  createdAt DateTime @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime @map("updated_at") @db.DateTime(0)

  @@map("pto_tenure_policies")
}

model Informations {
  id        String   @id @db.VarChar(255)
  contents  String   @map("contents")   @db.Text
  isActive  Boolean  @map("is_active")  @default(true)
  createdAt DateTime @map("created_at") @db.DateTime(0) @default(now())
  updatedAt DateTime @map("updated_at") @db.DateTime(0)

  informationHistories InformationHistories[]

  @@map("informations")
}

model InformationHistories {
  id        String     @id @db.VarChar(255)
  informationId String @map("information_id") @db.VarChar(255)
  contents  String     @map("content")    @db.Text
  updatedBy String     @map("updated_by") @db.VarChar(255)
  createdAt DateTime   @map("created_at") @db.DateTime(0) @default(now())
  updatedAt DateTime   @map("updated_at") @db.DateTime(0)

  user        Users        @relation(fields: [updatedBy],     references: [id])
  information Informations @relation(fields: [informationId], references: [id])

  @@map("information_histories")
  @@index([updatedBy])
  @@index([informationId])
}

model ClientNotes {
  id              String    @id @db.VarChar(255)
  organizationId  String    @map("organization_id") @db.VarChar(255) @unique
  createdAt       DateTime  @map("created_at") @db.DateTime(0) @default(now())

  snapshots       ClientNoteSnapshots[]
  organization    Organizations  @relation(fields: [organizationId], references: [id])
  @@map("client_notes")
  @@index([organizationId])
}

model ClientNoteSnapshots {
  id                         String         @id                                  @db.VarChar(255)
  clientNoteId               String         @map("client_note_id")               @db.VarChar(255)
  updatedBy                  String         @map("updated_by")                   @db.VarChar(255)
  designNotes                String         @map("design_notes")                 @db.Text
  electricalEngineeringNotes String         @map("electrical_engineering_notes") @db.Text
  structuralEngineeringNotes String         @map("structural_engineering_notes") @db.Text
  type                       ClientNoteType @map("type")
  createdAt                  DateTime       @map("created_at")                   @db.DateTime(0)   @default(now())
  updatedAt                  DateTime       @map("updated_at")                   @db.DateTime(0)

  clientNote                 ClientNotes @relation(fields: [clientNoteId], references: [id])
  user                       Users       @relation(fields: [updatedBy], references: [id])
  @@map("client_note_snapshots")
  @@index([updatedBy])
  @@index([clientNoteId])
}

enum InvoicesStatus {
  Unissued
  Issued
  Paid
}

enum PaymentsPaymentMethod {
  Credit
  Direct
}

enum CreditTransactionsTransactionType {
  Reload
  Deduction
}

enum ClientNoteType {
  Create
  Modify
}